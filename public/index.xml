<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome on Vonage Workshop</title>
    <link>https://vonage-workshop.nexmodev.com/</link>
    <description>Recent content in Welcome on Vonage Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://vonage-workshop.nexmodev.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Certification Project</title>
      <link>https://vonage-workshop.nexmodev.com/video/certification-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vonage-workshop.nexmodev.com/video/certification-project/</guid>
      <description>This is a guided activity that provides you with some initial starting code and relies on you to complete it. The solution is in two parts - the server (written in Node.js using the Express framework) and the client, which uses vanilla JavaScript.
After successfully completing the activity, you will be able to create a single participant video session and see yourself in your web cam. You can spin up multiple client instances and all will connect to the same session and therefore see the same video.</description>
    </item>
    
    <item>
      <title>Send SMS and MMS</title>
      <link>https://vonage-workshop.nexmodev.com/messages/send-sms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vonage-workshop.nexmodev.com/messages/send-sms/</guid>
      <description>In this tutorial you will send an SMS using the Messages API and then adapt your solution to send an MMS
The same steps taken here can be easily modified to send a message across other channels, including Viber, Facebook Messenger and WhatsApp.
The steps Create your project Create a node.js project for this by running npm init and accepting all the defaults:
mkdir messages-sms cd messages-sms npm init touch index.</description>
    </item>
    
    <item>
      <title>WhatsApp and Viber</title>
      <link>https://vonage-workshop.nexmodev.com/messages/other-channels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vonage-workshop.nexmodev.com/messages/other-channels/</guid>
      <description>The WhatsApp and Viber channels require some configuration before they are used. However, you can play around with them in the sandbox.
Visit that page and follow the instructions to send yourself a message using either WhatsApp, Viber, or both!</description>
    </item>
    
    <item>
      <title>Certification Project</title>
      <link>https://vonage-workshop.nexmodev.com/messages/certification/certification-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vonage-workshop.nexmodev.com/messages/certification/certification-project/</guid>
      <description>Messages and Dispatch APIs Certification Objective You have learned how to send messages with the Messages API, but now you need to include the Dispatch API so that you can fail over from one channel to another!
Your job is to create an application that notifies your customer that their package will be delivered tomorrow.
Initially, you will attempt to contact them using a plain SMS message.
If that fails to elicit a response (and, for the purposes of this exercise let&amp;rsquo;s assume that you&amp;rsquo;ll wait 180 seconds), you should failover to either an MMS message (choose or create a suitable image) or a Facebook Messenger message containing an image.</description>
    </item>
    
    <item>
      <title>Certification Project</title>
      <link>https://vonage-workshop.nexmodev.com/verify/certification/certification-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vonage-workshop.nexmodev.com/verify/certification/certification-project/</guid>
      <description>SMS and Verify API Certification Use case You&amp;rsquo;re building a ride sharing service. You want your users to register with the service with their mobile phone number and you will use the Verify API to ensure that they own the number that they are registering with.
Once they are registered, you want your users to send SMS to each other using the SMS API, without revealing their private mobile numbers, so you will use a virtual number to mask those numbers.</description>
    </item>
    
    <item>
      <title>Certification Project</title>
      <link>https://vonage-workshop.nexmodev.com/voice/certification/certification-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vonage-workshop.nexmodev.com/voice/certification/certification-project/</guid>
      <description>Voice API Certification Use case Build a Voice API call menu that presents your users with a list of options. These should include:
 Listening to an audio file of your choice Hearing the current time and date Being transferred to another number that you own with a &amp;ldquo;we are now connecting you to an agent who will be able to help you&amp;rdquo; message  Use any supported SDK to achieve this.</description>
    </item>
    
    <item>
      <title>Create a Click-to-call web app</title>
      <link>https://vonage-workshop.nexmodev.com/conversation/click-to-call/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vonage-workshop.nexmodev.com/conversation/click-to-call/</guid>
      <description>In this tutorial, you will learn how to create a Client SDK application and then write the code to make a phone call from your Web App to a PSTN phone.
To achieve this, you will need:
 A web application that will make the voice call using the Client SDK A webhook server that can process an inbound webhook and return an NCCO to forward the inbound voice call to the destination phone  Steps 1.</description>
    </item>
    
  </channel>
</rss>